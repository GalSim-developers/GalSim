# vim: set filetype=python :

import os
import glob

Import('env')
RunInstall = env['_RunInstall']
RunUninstall = env['_RunUninstall']

install_subdir = 'share/galsim'

files = glob.glob('*')     # Everything
files.remove('SConscript') # except this file,
files.remove('SEDs')       # and the directories...
files.remove('bandpasses')
files.remove('sensors')

sed_files = glob.glob('SEDs/*')
bp_files = glob.glob('bandpasses/*')
sensor_files = glob.glob('sensors/*')

if 'install' in COMMAND_LINE_TARGETS:
    install_dir = env['FINAL_PREFIX']
    share_dir = os.path.join(install_dir,install_subdir)
else:
    install_dir = Dir('#.').abspath
    share_dir = Dir('#share').abspath

if 'install' in COMMAND_LINE_TARGETS:
    meta_data_dir = os.path.join(env['PYPREFIX'], 'galsim')
    if not os.path.isdir(meta_data_dir):
        os.makedirs(meta_data_dir)
    # Write file meta_data.py to have the correct directories.
    meta_data_file = os.path.join(env['PYPREFIX'], 'galsim', 'meta_data.py')
    try:
        f = open(meta_data_file,'w')
    except (IOError, OSError):
        # Probably the user ran sudo scons install without first running plain old scons
        # (without sudo), so the meta_data.py file is owned by root now.
        # However, it should still be removable, since the directory should be owned
        # by the user.  So remove it and then retry opening it.
        try:
            os.remove(meta_data_file)
        except (IOError, OSError):
            pass
        try:
            f = open(meta_data_file,'w')
        except (IOError, OSError):
            print("Unable to open %s for writing.  Probably need to run this with sudo."%meta_data_file)
            raise

    print('Writing updated meta_data.py at ',meta_data_file)

    f.write('# This file is automatically generated by SCons when building GalSim.\n')
    f.write('# Do not edit.  Any edits will be lost the next time SCons is run.\n')
    f.write('\n')
    f.write('install_dir = "%s"\n'%install_dir)
    f.write('share_dir = "%s"\n'%share_dir)
    f.close()

    RunInstall(env, files, install_subdir)
    RunInstall(env, sed_files, install_subdir+'/SEDs')
    RunInstall(env, bp_files, install_subdir+'/bandpasses')
    RunInstall(env, sensor_files, install_subdir+'/sensors')

if 'uninstall' in COMMAND_LINE_TARGETS:
    RunUninstall(env, files, install_subdir)
    RunUninstall(env, sed_files, install_subdir+'/SEDs')
    RunUninstall(env, bp_files, install_subdir+'/bandpasses')
    RunUninstall(env, sensor_files, install_subdir+'/sensors')
