#
#  ------------------------------------------------------------------------------
#  Author: Craig Lage, UC Davis
#  Date: Nov 4, 2019
#
#  Standalone cpp Poisson solver
#
#
# Poisson Solver configuration file

VerboseLevel = 1  # 0 - minimal output, 1 - normal, 2 - more verbose, 3 - dump almost everything

# Poisson solver constants
# These control the numerics of the Poisson solver
# They should not need to be changed unless you test for convergence

w = 1.8 			# Successive Over-Relaxation factor
ncycle = 128			# Number of SOR cycles at finest grid
iterations = 1			# Number of VCycles
#  ------------------------------------------------------------------------------
# Overall setup - these control the size and scale of the simulated volume

ScaleFactor = 2
# Power of 2 that sets the grid size
# ScaleFactor = 1 means grid size is 0.625 micron, 160 grids in the z-direction
# ScaleFactor = 2 cuts grid size by a factor of 2
# ScaleFactor = 4 cuts grid size by a factor of 4, etc.
SensorThickness = 100.0         # Sensor thickness in microns
PixelSizeX = 10.0  	     	# Pixel size in microns in x 
PixelSizeY = 10.0  	     	# Pixel size in microns in y 
GridsPerPixelX = 16		# Number of grids per pixel in x at ScaleFactor = 1
GridsPerPixelY = 16		# Number of grids per pixel in y at ScaleFactor = 1
Nx = 160      			# Number of grids in x at ScaleFactor = 1 (Must be a multiple of 32)
Ny = 160      			# Number of grids in y at ScaleFactor = 1 (Must be a multiple of 32)
Nz = 160			# Number of grids in z at ScaleFactor = 1 (Must be a multiple of 32)
Nzelec = 24			# Number of grids in electron and hole arrays
NZExp = 10.0                    # Non-linear Z-axis slope at z=0
      				# A value of 1.0 makes the z-axis linear
				# A value of 10.0 gives a 10X magnification at z=0
				# A value of 10.0 is recommended.

XBCType = 1			# Set X direction boundary conditions: 0 - Free (Eperp = 0), 1 - Periodic
YBCType = 1			# Set Y direction boundary conditions: 0 - Free (Eperp = 0), 1 - Periodic
SimulationRegionLowerLeft = 5.0 5.0	  # Allows adjustment of X, Y coordinates

#  ------------------------------------------------------------------------------
# Fixed charges and oxides in the silicon

GateOxide = 0.15                 # Gate Oxide thickness in microns
ChannelStopWidth = 2.0 		 # Width of ChannelStop region in microns
FieldOxide = 0.15                 # Field Oxide thickness in microns
FieldOxideTaper = 0.0            # Field Oxide taper width in microns
BackgroundDoping = -2.4E12 	 # Background doping in cm^-3

# Channel Doping: Use the syntax below for a square profile
#ChannelProfile = 0		# 0 = Square profile, N = N Gaussian profiles
#ChannelDoping = 1.0E12		# Doping in cm^-2
#ChannelDepth = 1.0		# Depth in microns

ChannelProfile = 1		# 0 = Square profile, N = N Gaussian profiles
ChannelDose_0 = 1.0E12		# Doping in cm^-2
ChannelPeak_0 = 0.05		# Location of peak below silicon surface in microns
ChannelSigma_0 = 0.32		# Sigma in microns

# Channel Stop doping: Use the syntax below for a square profile
ChannelStopProfile = 0		# 0 = Square profile, N = N Gaussian profiles
ChannelStopDoping = 0.0		# Doping in cm^-2
ChannelStopDepth = 0.0		# Depth in microns

ChannelStopDotCenter = 5.0	# Center of channel stop "Dots" in microns
ChannelStopDotHeight = 2.5      # Height of channel stop "Dots"
ChannelStopDotProfile = 1	# 0 = Square profile, N = N Gaussian profiles
ChannelStopDotDose_0 = -6.0E12	# Doping in cm^-2
ChannelStopDotPeak_0 = 0.15	# Location of peak below silicon surface in microns
ChannelStopDotSigma_0 = 0.36	# Sigma in microns
ChannelStopDotSurfaceCharge = 0.0	# Surface charge density in cm^-2

#  ------------------------------------------------------------------------------
# Mobile charge calculation control parameters

ElectronMethod = 2	    	 # Controls electron calculation
	       	 		 # 0 - Leave electrons where they land from tracking
				 # 1 - Set QFe (QFe is always used in Fixed Regions)
				 # 2 - Electron conservation and constant QFe
				 # If 1 is specified, you must provide a *_QFe.dat file, either by
				 # Setting BuildQFeLookup = 1 or by copying a file into the data directory.
#BuildQFeLookup = 0
#NQFe = 81			 # If building QFe lookup, you need to provide at
       				 # least NQFe pixels in the PixelRegion
#QFemin = 19.0
#QFemax = 27.0

qfh = -7.5			 # Controls hole calculation.
      				 # Currently this applies to the whole volume,
				 # unless over-ridden in Fixed Regions

#  ------------------------------------------------------------------------------
# Voltages - these should be self-explanatory

Vbb = -50.0			# Back bias
Vparallel_lo = -6.0		# Parallel gate low voltage
Vparallel_hi = 3.5		# Parallel gate high voltage
NumPhases = 4	  		# Number of clock phases (typically either 3 or 4)
CollectingPhases = 2            # Number of Parallel gates high in collecting region

#  ------------------------------------------------------------------------------
# Pixel Regions
# These allow one to set up one or more regions of regularly spaced pixels.
# Each pixel region will need its extents defined
# Within each pixel region, one can fill multiple collecting wells with arbitrary amounts of charge

NumberofPixelRegions = 1	  	  # 1
PixelRegionLowerLeft_0 = 0.0 0.0	  #
PixelRegionUpperRight_0 = 110.0 110.0	  #
NumberofFilledWells_0 = 1		  #
CollectedCharge_0_0 = 	100000		  # Collected charge in e-
FilledPixelCoords_0_0 = 55.0 55.0	  # (x,y) coords of pixel center

#  ------------------------------------------------------------------------------
# Constant Voltage Regions - this allows a number of regions of fixed surface potential
# Each Constant Voltage region will need its extents defined
# Example syntax below

NumberofFixedRegions = 0
#FixedRegionLowerLeft_0 = 0.0 367.0	  # 
#FixedRegionUpperRight_0 = 110.0 430.0	  #
#FixedRegionVoltage_0 = -60.0		  #
#FixedRegionDoping_0 = 0		  # Doping - 0-None; 1-Channel; 2-ChanStop 
#FixedRegionOxide_0 = 2			  # Oxide - 0-None; 1-Channel; 2-ChanStop
#FixedRegionQFe_0 = 100.0		  #
#FixedRegionQFh_0 = -58.0		  #
#FixedRegionBCType_0 = 0		  # Boundary conditions - 0-Fixed voltage; 1-Free (Eperp = 0)

#  ------------------------------------------------------------------------------
# Pixel Boundary Tests - This allows tracing the pixel boundaries and electron paths

PixelBoundaryLowerLeft = 10.0 10.0
PixelBoundaryUpperRight = 100.0 100.0
PixelBoundaryNx = 9	   	      	   # Number of pixels in postage stamp
PixelBoundaryNy = 9	   	      	   # Number of pixels in postage stamp

PixelBoundaryTestType = 1		   # 0 - Run a grid of equally spaced electrons,
		      			   # 1 - Run a random set of electrons with a Gaussian pattern
					   # 2 - Run a random set of electrons inside PixelBoundary
#PixelBoundaryStepSize = 0.2 0.2	   # Needed if PixelBoundaryTestType = 0

# The following parameters are used if PixelBoundaryTestType = 2
Sigmax = 10.0					 # Sigma of incoming light profile
Sigmay = 10.0					 # Sigma of incoming light profile
Xoffset = 0.0					 # Center offset of incoming light profile
Yoffset = 0.0					 # Center offset of incoming light profile
NumSteps = 1					 # Number of steps, each one adding NumElec electrons

NumElec = 0					 # Number of electrons to be traced between field recalculation

CalculateZ0 = 0				   # 0 - don't calculate - Use ElectronZ0
	      				   # 1 - calculate from filter and SED. In this case, must provide the next two parameters
#FilterBand = r				   # Filter band from LSST used to calculate Z0
#FilterFile = notebooks/gclef_pdf.dat	   # SED used to calculate Z0
ElectronZ0Fill = 95.0       	      	   # Starting z value of electron for tracking. 100.0 is at the incident light surface.
ElectronZ0Area = 95.0       	      	   # Starting z value of electron for Area/Vertex finding. 100.0 is at the incident light surface.

LogEField = 1	 	       	      	   # 0 - don't calculate E-Field, 1 - Calculate and store E-Field
LogPixelPaths = 0			   # 0 - only the final (z~0) point is logged, 1 - Entire path is logged
PixelAreas = 1				   # -1 - Don't calculate areas, N - calculate areas every nth step
NumVertices = 32 			   # Number of vertices per side for the pixel area calculation.
	      				   # Since there are also 4 corners, there will be:
					   # (4 * NumVertices + 4) vertices in each pixel

#  ------------------------------------------------------------------------------
# Electron tracking parameters

CCDTemperature = 173.0			   # Temp in Degrees K.  Used to calculate diffusion steps.

DiffMultiplier = 2.30			   # Used to adjust the amount of diffusion.
       	 				   # A value of 2.30 gives the theoretical amount of diffusion
					   # A value of 0.0 turns off diffusion completely
EquilibrateSteps = 1			   # Number of diffusion steps each electron takes after reaching the bottom,
					   # and before beginning to log the charge.
BottomSteps = 1				   # Number of diffusion steps each electron takes while logging final charge location					   
NumDiffSteps = 1			   # A speed/accuracy trade-off. A value of 1 uses the theoretical diffusion
	       				   # step.  A higher value takes larger steps. I have done a few tests
					   # but I recommend using a value of 1 unless you test larger values.
SaturationModel = 0			   # Saturation Model 1=On, 0=Off; Experimental!


#  ------------------------------------------------------------------------------
# These control the location and naming of the output

outputfiledir = data/pixel-e2v-50
outputfilebase 	= Pixel
SaveData = 1 				# 0 - Save only Pts data, N - Save all data every Nth step
SaveElec = 1 				# 0 - Save only Pts data, N - Save Elec data every Nth step
SaveMultiGrids = 0			

#  ------------------------------------------------------------------------------
# These control the continuation if you want to save a simuation before it is complete

Continuation = 0			# Use this to continue an existing simulation and read in where you left off
	       				# 0 - No continuation
					# 1 Continue at step LastContinuationStep
LastContinuationStep = 0
