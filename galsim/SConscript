# vim: set filetype=python :

import os
import sys
import glob

Import('env')
ReadFileList=env['__readfunc']

python_dir = 'galsim'
python_install_dir = os.path.join(env['PYPREFIX'], python_dir)

py_files = glob.glob("*.py")

subdir_list = [ 'config' ]

py_files_sub = []
python_install_subdir = []
for subdir in subdir_list:
    py_files_sub.append(glob.glob(os.path.join("config","*.py")))
    python_install_subdir.append(os.path.join(python_install_dir,"config"))

if 'install' in COMMAND_LINE_TARGETS:

    installed_py = env.Install(dir=python_install_dir, source=py_files)
    env.Alias(target='install', source=installed_py)

    for i in range(len(subdir_list)):
        installed_py += env.Install(dir=python_install_subdir[i], source=py_files_sub[i])
        env.Alias(target='install', source=installed_py)

if 'uninstall' in COMMAND_LINE_TARGETS:
    # There is no env.Uninstall method, we must build our own
    # MJ: The scons delete function doesn't actually delete directories a la rm -rf
    # I think this is a feature they will add someday, so maybe not worth worrying about it.
    # but if we really want the galsim directory to be deleted on an uninstall, we
    # should change this.  Proabaly roll our own Delete function.
    deltarget = Delete("$TARGET")

    for f in py_files:
        env.Alias('uninstall', env.Command(os.path.join(python_install_dir, f), None, deltarget))

    for i in range(len(subdir_list)):
        for f in py_files_sub[i]:
            env.Alias('uninstall', env.Command(os.path.join(python_install_subdir[i], f), 
                      None, deltarget))

