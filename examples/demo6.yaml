
# YAML configuration file for use with the executable galsim_yaml
# Type:
#   galsim_yaml demo6.yaml
#
# This configuration file is designed to be equivalent to the example script called demo6.py
#
#    Make images similar to that done for the Great08 challenge:
#      - Each fits file is 10 x 10 postage stamps.
#        (The real Great08 images are 100x100, but in the interest of making the Demo
#         script a bit quicker, we only build 100 stars and 100 galaxies.)
#      - Each postage stamp is 40 x 40 pixels.
#      - One image is all stars.
#      - A second image is all galaxies.
#      - Applied shear is the same for each galaxy.
#      - Galaxies are oriented randomly, but in pairs to cancel shape noise.
#      - Noise is poisson using a nominal sky value of 1.e6.
#      - Galaxies are sersic profiles.
#

# In this file, we use yaml's multiple documents feature.
# This can be useful if you are doing similar things, but have a couple differences
# for the different output files.
# In this case, we output the PSF image as a single-image fits file, 
# and the galaxies are output as 100 images in both a multi-extension fits file
# and a fits data cube.

# The multiple yaml documents are separated by a line with three dashes "---"
# The first document has all the parts that are common to all the output files.
# Then each subsequent document defines its particular additions to that base.
# These are combined with the first document's information for processing.
# So if we start numbering the documents at 0, we effectively process:
#   doc[0] + doc[1]
#   doc[0] + doc[2]
#   doc[0] + doc[3]
#   ...

# So start with the common information:

# Define what kind of psf to use
psf : 
    type : Sum
    items :
        - { type : Gaussian, fwhm : 0.6, flux : 0.8 }
        - { type : Gaussian, fwhm : 2.3, flux : 0.2 }


# Define the pixel size
# This time, we'll leave the size unspecified to let GalSim automatically choose 
# an appropriate size.
image :
    pixel_scale : 0.15  # arcsec / pixel

    # Define the initial random number seed
    random_seed : 1512413
---

# The first specialization document is for the psf output.

output :
    dir : output_yaml
    file_name : psf_real.fits
 
---

# The next document is for the galaxy output.

# Define the galaxy profile
gal :
    type : RealGalaxy
    flux : 1.e5

    index : 
        type : Sequence 
        # Sequence can optionally take first, last, and step, however, the defaults 
        # are fine here: 
        #   first = 0
        #   last = <num entries in catalog> - 1
        #   step = 1
        # If the sequential values get past max, they will repeat back at min, so it's
        # ok to have nobjects greater than the number of real galaxies in the catalog.
    
    rotate :
        type : Random

    shear : 
        type : G1G2 
        g1 : -0.027
        g2 : 0.031

# We add the noise information to the image field.
# Note: since the output includes a data_cube output, which requires all the
# images to be the same size, GalSim will choose the size of the first image
# automatically from the profile, but then subsequent images will be forced to
# be the same size. 
image :
    noise :
        sky_level : 1.e6  # ADU / arcsec^2

# We need to define where the real galaxy input catalog is.
input :
    real_catalog :
        image_dir : data
        file_name : real_galaxy_catalog_example.fits
        preload : True   # This usually makes a big improvement in speed

# Define the output formats
output :
    type : DataCube
    dir : output_yaml
    file_name : cube_real.fits
    nimages : 100
 
