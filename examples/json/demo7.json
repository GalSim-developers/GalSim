{
"#" : "Demo #7",

"#" : "The seventh JSON configuration file in our tutorial about using Galsim config files",
"#" : "(This file is designed to be viewed in a window 100 characters wide.)",

"#" : "This script introduces drawing profiles with photon shooting rather than doing the ",
"#" : "convolution with an FFT.  It makes images using 5 different kinds of PSF and 5 different",
"#" : "kinds of galaxy.  Some of the parameters (flux, size and shape) are random variables, so ",
"#" : "each of the 25 pairings is drawn 4 times with different realizations of the random numbers.",
"#" : "The profiles are drawn twice: once with the FFT method, and once with photon shooting.",
"#" : "The two images are drawn side by side so it is easy to visually compare the results.",
"#" : "The 100 total profiles are written to a FITS data cube, which makes it easy to scroll",
"#" : "through the images comparing the two drawing methods.",

"#" : "New features introduced in this demo:",

"#" : "- obj type : List (items)",
"#" : "- obj type : Airy (lam_over_diam)",
"#" : "- obj : dilate",
"#" : "- value type : Sequence (..., repeat)",
"#" : "- value type : Random (min, max)",
"#" : "- image type : Tiled (..., stamp_size, xborder, yborder)",
"#" : "- image : draw_method (fft or phot)",
"#" : "- output : file_name with .gz, .bz2 or .fz extension automatically uses compression.",
"#" : "- image : gsparams",


"#" : "Define the PSF profiles",
"psf" : {
    "type" : "List",
    "items" : [
        {
            "type" : "Gaussian",
            "fwhm" : 0.65
        },
        {
            "type" : "Moffat",
            "fwhm" : 0.65,
            "beta" : 2.4
        },
        {
            "type" : "Sum",
            "items" : [
                { "type" : "Gaussian" , "flux" : 0.8 , "fwhm" : 0.65 },
                { "type" : "Gaussian" , "flux" : 0.2 , "fwhm" : 1.3 }
            ]
        },
        {
            "type" : "Convolution",
            "items" : [
                { "type" : "Gaussian" , "fwhm" : 0.65 },
                { "type" : "OpticalPSF" , 
                  "lam_over_diam" : 0.39 , "obscuration" : 0.4 ,
                  "defocus" : 0.1 , "spher" : -0.3 ,
                  "astig1" : 0.3 , "astig2" : -0.2 ,
                  "coma1" : 0.2 , "coma2" : 0.1 }
            ]
        },
        {
            "type" : "Convolution",
            "items" : [
                { "type" : "Kolmogorov" , "fwhm" : 0.65 },
                { "type" : "Airy" , "lam_over_diam" : 0.195 }
            ]
        }
    ],

    "index" : {
        "type" : "Sequence",
        "first" : 0,
        "last" : 4,

        "#" : "How many times to repeat the same value before moving on:",
        "repeat" : 40 
    }
},

"#" : "Define the galaxy profiles",
"gal" : {
    "type" : "List",

    "#" : "The sizes here start as 1, but we dilate the profile below:",
    "items" : [
        { "type" : "Gaussian" , "half_light_radius" : 1 },
        { "type" : "Exponential" , "half_light_radius" : 1 },
        { "type" : "DeVaucouleurs" , "half_light_radius" : 1 },
        { "type" : "Sersic" , "n" : 2.5 , "half_light_radius" : 1 },
        {
            "type" : "Sum",
            "items" : [
                { "type" : "Sersic" , "n" : 3.2 , "half_light_radius" : 0.7 , "flux" : 0.4 },
                { "type" : "Sersic" , "n" : 1.5 , "half_light_radius" : 1.2 , "flux" : 0.6 }
            ]
        }
    ],

    "index" : {
        "type" : "Sequence",
        "#" : "The index item for a List automatically has first and last set appropriately",
        "#" : "(0 and 4 in this case).  So we can omit them, and just specify repeat.",
        "#" : "This will repeat each 8 times, but also go through the full list 5 times:",
        "repeat" : 8
    },

    "flux" : { "type" : "Random" , "min" : 1e4 , "max" : 1e5 },
    "dilate" : { "type" : "Random" , "min" : 0.3 , "max" : 1.3 },
    "ellip" : {
        "type" : "EBeta",
        "e" : { "type" : "Random" , "min" : 0.0 , "max" : 0.8 },
        "beta" : { "type" : "Random" }
    }
},

"#" : "Define some other information about the images ",
"image" : {
    "#" : "Each image in the data cube has two tiles.",
    "type" : "Tiled",
    "nx_tiles" : 2,
    "ny_tiles" : 1,

    "#" : "Use a 2 pixel border between fft and phot images",
    "#" : "Rather than specify a single border for both directions, you can also specify",
    "#" : "xborder and/or yborder separately.  Here we use xborder.",
    "xborder" : 2,

    "#" : "Rather than specify stamp_xsize and stamp_ysize separately, you can also just ",
    "#" : "specify a single stamp_size.",
    "stamp_size" : 64,

    "pixel_scale" : 0.28,

    "#" : "Define what kind of noise to use",
    "noise" : {
        "sky_level" : 1e4
    },
    
    "#" : "This is a pretty contrived item.  Normally, you would just choose either",
    "#" : "fft or phot.  But here we alternate between the two of them to make ",
    "#" : "images that compare the same object drawn both ways.",
    "draw_method" : {
        "type" : "List",
        "items" : [ "fft" , "phot" ],
        "#" : "The following sequence for index is automatically generated:",
        "#" : "index : { type : Sequence , firat : 0 , last : 1 }"
    },

    "#" : "This is also pretty contrived. ",
    "#" : "It is really only relevant for this particular example.  ",
    "#" : "The usual case is to just set a single number, which really means that each object",
    "#" : "gets a sequential value starting with this number.  In this case we repeat each value",
    "#" : "two times, so the fft and phot images get the same values for the random parameters.",
    "random_seed" : { "type" : "Sequence" , "first" : 553728 , "repeat" : 2 },

    "#" : "This script is set up as a comparison between using FFTs for doing the convolutions and",
    "#" : "shooting photons.  The two methods have trade-offs in speed and accuracy which vary",
    "#" : "with the kind of profile being drawn and the S/N of the object, among other factors.",
    "#" : "In addition, for each method, there are a number of parameters GalSim uses that control",
    "#" : "aspects of the calculation that further affect the speed and accuracy.",
    
    "#" : "These parametsrs can be adjusted from the defaults with a gsparams item, either in",
    "#" : "image (in which case the values apply to all objects) or in the gal or psf layer",
    "#" : "in which case the values apply to just that object.  For this script, we just apply a",
    "#" : "global change to some of the values, just to demonstrate how it works.",

    "#" : "See the config documentation for the complete list of parameters and more detailed",
    "#" : "documentation, including the default values for each parameter.",
    "gsparams" : {
        "#" : "maximum fractional flux that may be aliased around edge of FFT",
        "alias_threshold" : 1.0e-2,
        "#" : "k-values less than this may be excluded off edge of FFT",
        "maxk_threshold" : 2.0e-3,
        "#" : "approximations in real space aim to be this accurate",
        "xvalue_accuracy" : 1.0e-4,
        "#" : "approximations in fourier space aim to be this accurate",
        "kvalue_accuracy" : 1.0e-4,
        "#" : "approximations in photon shooting aim to be this accurate",
        "shoot_accuracy" : 1.0e-4,
        "#" : "minimum size of ffts",
        "minimum_fft_size" : 64
    }

},

"#" : "Define the name and format of the output file",
"output" : {
    "type" : "DataCube",

    "dir" : "output_json",
    "file_name" : "cube_phot.fits.gz",
    
    "nimages" : 100
}

}
