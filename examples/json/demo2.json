{

"#" : "JSON configuration file for use with the executable galsim_json",
"#" : "From the examples directory, type:",
"#" : "  galsim_json json/demo2.json",

"#" : "This configuration file is designed to be equivalent to the example script called demo2.py",

"#" : "It's a little bit more sophisticated than script 1, using profiles other than Gaussians,",
"#" : "and adding an applied shear.  It also uses Poisson noise.",

"gal" : {
    "#" : "Exponential requires one of scale_radius, fwhm, or half_light_radius.",
    "type" : "Exponential",
    "scale_radius" : 2.7,
    "flux" : 1e5,

    "shear" :  {
        "#" : "Shear the galaxy by some value.",
        "#" : "There are several ways to specify shears, so we need to start by defining a type",
        "#" : "again.  (This is a theme in our configuration grammar.)",
        "#" : "G1G2 means to use the so-called 'reduced shear' definition, commonly",
        "#" : "written as (g1,g2).",
        "type" : "G1G2",
        "g1" : 0.1,
        "g2" : 0.2
    }
},
 
"psf" : {
    "#" : "A Moffat is a better approximation of ground-based PSFs than a Gaussian.",
    "#" : "F(r) = (1+(r/rd)^2)^(-beta)",
    "#" : "It requires the beta parameter to be specified.",
    "#" : "It also requires one of scale_radius, fwhm, or half_light_radius.",
    "type" : "Moffat",
    "beta" : 5.0 ,
    "half_light_radius" : 1.0
},

"image" : {
    "pixel_scale" : 0.2,

    "noise" : {
        "#" : "CCDNoise models how noise normally happens on CCD images -- each pixel",
        "#" : "has Poisson noise according to the number of photons hitting it.",
        "type" : "CCDNoise",
        "#" : "Most of the noise in the image is normally from the sky flux, rather than each",
        "#" : "object's flux, so you need to specify what the sky level should be.",
        "#" : "Note: the final image will be 'sky subtracted', so the mean background level",
        "#" : "will be 0.  This just specifies the sky level to use for the noise.",
        "sky_level" : 2.5e4
    },

    "#" : "If you want the random values to be deterministic, you can provide an initial seed.",
    "#" : "If this isn't set, then it will use the current time to create an initial seed.",
    "random_seed" : 1534225
},

"output" : {
    "dir" : "output_json",
    "file_name" : "demo2.fits"
}

}
