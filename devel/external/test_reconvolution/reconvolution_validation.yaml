# reconvolution_validation.yaml is a configuration script for use with reconvolution_validation.py.
# It is not a standard galsim.config script, although the main driver uses parts of it as such.
# See README.md, reconvolution_validation.py and comments in this file for usage details.


# these settings control the details of ring tests performed by the reconvolution validation driver.
reconvolution_validation_settings:
    # number of galaxies in the input catalog to use
    n_gals : &n_gals 270
    # number of shears to use (see gal->shear->items)
    n_shears : &n_shears 10
    # number of angles in a ring test 
    n_angles : &n_angles 8

    # n_repeat_gal  = n_shears * n_angles
    n_repeat_gal : &n_repeat_gal 80
    # n_repeat_shear = n_angles 
    n_repeat_shear : &n_repeat_shear 8
    # n_images = n_shears * n_angles *n_gals
    n_images : &n_images 21600

# the test will be run one time for all the values of all the varied parameters listed here
vary_params:
    alias_threshold : 
        path : ['gsparams','alias_threshold']
        values : [ 1.0e-1 , 5.0e-2 , 1.0e-2 , 5.0e-3 , 1.0e-3 , 5.0e-4 ]
        rebuild_direct : True 
        rebuild_reconv : True  
    maxk_threshold :   
        path : ['gsparams','maxk_threshold' ] 
        values : [ 1.0e-1 , 1.0e-2 , 5.0e-3 , 1.0e-3 , 5.0e-4 , 1.0e-4 , 5.0e-5 , 1.0e-4 ]  
        rebuild_direct : True
        rebuild_reconv : True 
    kvalue_accuracy : 
        path : ['gsparams','kvalue_accuracy']
        values : [ 1.0e-3 , 1.0e-4 , 1.0e-5 , 1.0e-6 , 1.0e-7  ] 
        rebuild_direct : True 
        rebuild_reconv : True 
    snr :
        path : ['cosmos_images','gal','signal_to_noise']
        values : [ 2e20, 2000, 200, 100, 50, 25 ] 
        rebuild_direct : False 
        rebuild_reconv : True 

# galsim.config dict corresponding to mock cosmos images
cosmos_images:
        
    gal :
        type : Sersic
        half_light_radius : { type : InputCatalog , col : 2, index : { type: Sequence, repeat: *n_repeat_gal} }
        n : { type : InputCatalog , col : 1 , index : { type: Sequence, repeat: *n_repeat_gal}}
        ellip : 
            type : GBeta 
            g : { type : InputCatalog , col : 3, index : { type: Sequence, repeat: *n_repeat_gal} }  
            beta : 
                type: Deg
                theta : 
                    type : List
                    items : [   0. ,   22.5,   45. ,   67.5,   90. ,  112.5,  135. ,  157.5]
        shift : 
            type : XY  
            x : { type : InputCatalog , col : 5 , index : { type: Sequence, repeat: *n_repeat_gal}}
            y : { type : InputCatalog , col : 6 , index : { type: Sequence, repeat: *n_repeat_gal}}
        signal_to_noise : 2e10

    # this is the PSF of the deep imaging
    psf : 
        type : Airy
        lam_over_diam : {type: Eval, str: '700.e-9 / 1.3 * 180. / math.pi * 3600.'}
        ellip : 
            type : EBeta
            e : { type : InputCatalog , col : 7,  index : { type: Sequence, repeat: *n_repeat_gal} }  
            beta : { type: Deg , theta : {type : InputCatalog , col : 8 , index : { type: Sequence, repeat: *n_repeat_gal} } }
      
    image :
        random_seed : 121212
        draw_method : fft
        nproc : 5
        pixel_scale : 0.03          # pixel scale for space observations
        type : Single
        size : 256
        # this field is required for the image, 
        # and is arbitrary because we are using gal['signal_to_noise']
        noise : { type : Gaussian, variance : 1 }
        
    input :
        catalog :
            dir : .
            file_name : cosmos_sersics_sample_N300_cleaned.asc
   
    output :
        type : MultiFits
        nimages : *n_images

        dir : .
        file_name : rgc_val_gal.fits          
        psf :
            file_name : rgc_val_psf.fits    

# galsim.config dict corresponding to the images reconvolved to the ground based seeing
reconvolved_images :
    # this is the reconvolving PSF
    psf : 
        type : Convolution
        items :  
            - { type : Moffat, fwhm : 0.65, beta : 3 }
            - { type : Airy, lam_over_diam : {type: Eval, str: '(700.e-9)/4*180/math.pi*3600'} }
        ellip : 
            type : EBeta
            e : { type : InputCatalog , col : 7,  index : { type: Sequence, repeat: *n_shears} }  
            beta : { type: Deg , theta : {type : InputCatalog , col : 8 , index : { type: Sequence, repeat: *n_shears} } }
            
    gal :
        type : RealGalaxy
        flux : 1.
        index : { type : Sequence }
        shear : 
            type : List
            index : {type: Sequence, repeat : *n_repeat_shear}
            items: 

                - { type : G1G2 , g1 : -0.00 ,  g2 : -0.00  }
                - { type : G1G2 , g1 : +0.020 , g2 :  0.000 }
                - { type : G1G2 , g1 : -0.020 , g2 :  0.000 }
                - { type : G1G2 , g1 :  0.000 , g2 : +0.020 }
                - { type : G1G2 , g1 :  0.000 , g2 : -0.020 }
                - { type : G1G2 , g1 : +0.020 , g2 : +0.020 }
                - { type : G1G2 , g1 : +0.020 , g2 : -0.020 }
                - { type : G1G2 , g1 : -0.020 , g2 : +0.020 }
                - { type : G1G2 , g1 : -0.020 , g2 : -0.020 }
                - { type : G1G2 , g1 : -0.00  , g2 : +0.00  }

    image :
        random_seed : 2222211
        nproc : 5
        pixel_scale : 0.2   # pixel scale for the ground observation
        type : Single
        size : 128
        # this field is required for the photon image, 
        # but we don't want to add any noise, so we set the variance to 0
        noise : { type : Gaussian, sigma : 0. }
    
    input:
        real_catalog :
            dir : .
            file_name : rgc_val.fits     # will be created by the script
            preload : True   

# gsparams are outside cosmos_images and reconvolved_images, so there is only one point 
# where those can be changed. Although outside of the main config here, 
# the reconvolution_validation.py script will take care of it
gsparams :  
    minimum_fft_size : 128      
    maximum_fft_size : 20000     
    alias_threshold : 5.e-3     
    maxk_threshold : 1.e-3      
    kvalue_accuracy : 1.e-5     
    xvalue_accuracy : 1.e-5     
    shoot_accuracy : 1.e-5      
    realspace_relerr : 1.e-3    
    realspace_abserr : 1.e-6    
    integration_relerr : 1.e-5  
    integration_abserr : 1.e-7  

